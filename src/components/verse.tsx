"use client"

import { useState, useEffect } from "react"
import { ChevronLeft, ChevronRight, Heart, BookOpen } from "lucide-react"

// Dados simulados de vers√≠culos com explica√ß√µes
const verses = [
  {
    id: 1,
    text: "Porque Deus amou o mundo de tal maneira que deu o seu Filho unig√™nito, para que todo aquele que nele cr√™ n√£o pere√ßa, mas tenha a vida eterna.",
    reference: "Jo√£o 3:16",
    explanation: `Este vers√≠culo √© frequentemente chamado de "o evangelho em miniatura" porque resume a ess√™ncia da mensagem crist√£ em uma √∫nica frase.

    A express√£o "de tal maneira" indica a intensidade e profundidade do amor de Deus pela humanidade. Este amor √© t√£o grande que levou Deus a oferecer seu √∫nico Filho como sacrif√≠cio pelos pecados do mundo.

    A palavra "mundo" aqui se refere a toda a humanidade, mostrando que o amor de Deus √© universal e n√£o limitado a um grupo espec√≠fico. A promessa de "vida eterna" representa n√£o apenas uma exist√™ncia sem fim, mas uma qualidade de vida em comunh√£o com Deus.

    Este vers√≠culo enfatiza que a salva√ß√£o vem pela f√© ("todo aquele que nele cr√™") e n√£o por obras ou m√©ritos pr√≥prios.`,
  },
  {
    id: 2,
    text: "O Senhor √© o meu pastor, nada me faltar√°.",
    reference: "Salmos 23:1",
    explanation: `Este √© o primeiro vers√≠culo do famoso Salmo 23, escrito pelo rei Davi, que era pastor antes de se tornar rei de Israel.

    A met√°fora do pastor era muito significativa na cultura antiga. Um bom pastor guiava, protegia e cuidava de suas ovelhas com dedica√ß√£o total, muitas vezes arriscando a pr√≥pria vida por elas.

    Ao declarar "O Senhor √© o meu pastor", Davi expressa sua confian√ßa total em Deus como seu guia e protetor. A frase "nada me faltar√°" n√£o significa necessariamente abund√¢ncia material, mas sim que todas as necessidades essenciais ser√£o supridas.

    Este vers√≠culo estabelece o tema de todo o Salmo 23: a completa confian√ßa em Deus como provedor e protetor em todas as circunst√¢ncias da vida.`,
  },
  {
    id: 3,
    text: "Tudo posso naquele que me fortalece.",
    reference: "Filipenses 4:13",
    explanation: `Este vers√≠culo, escrito pelo ap√≥stolo Paulo enquanto estava preso, √© frequentemente citado como fonte de inspira√ß√£o e for√ßa.

    No contexto original, Paulo estava falando sobre sua capacidade de estar contente em qualquer situa√ß√£o - na abund√¢ncia ou na escassez. Ele n√£o est√° dizendo que pode fazer literalmente qualquer coisa, mas que pode enfrentar qualquer circunst√¢ncia com a for√ßa que Cristo lhe d√°.

    A palavra grega traduzida como "fortalece" (endunamo≈ç) significa "capacitar internamente, fortalecer". Isso sugere que a for√ßa vem de dentro, atrav√©s da presen√ßa de Cristo no crente.

    Este vers√≠culo nos ensina sobre a sufici√™ncia de Cristo e como podemos encontrar for√ßa nEle para enfrentar os desafios da vida, sejam eles grandes ou pequenos.`,
  },
  {
    id: 4,
    text: "Porque eu bem sei os planos que tenho para v√≥s, diz o Senhor; planos de paz, e n√£o de mal, para vos dar um futuro e uma esperan√ßa.",
    reference: "Jeremias 29:11",
    explanation: `Este vers√≠culo foi originalmente escrito para os israelitas exilados na Babil√¥nia, oferecendo esperan√ßa em um momento de grande desespero nacional.

    A palavra hebraica para "planos" (machashavah) implica pensamentos cuidadosamente elaborados, n√£o ideias casuais. Isso sugere que Deus tem inten√ß√µes espec√≠ficas e bem planejadas para Seu povo.

    Os "planos de paz" (shalom em hebraico) referem-se n√£o apenas √† aus√™ncia de conflito, mas a um bem-estar completo - f√≠sico, emocional e espiritual.

    "Futuro e esperan√ßa" indica que Deus n√£o apenas tem boas inten√ß√µes para o presente, mas tamb√©m para o futuro. Mesmo em meio ao sofrimento, h√° a promessa de que Deus est√° trabalhando para um prop√≥sito maior e melhor.`,
  },
  {
    id: 5,
    text: "Mas os que esperam no Senhor renovar√£o as suas for√ßas; subir√£o com asas como √°guias; correr√£o, e n√£o se cansar√£o; andar√£o, e n√£o se fatigar√£o.",
    reference: "Isa√≠as 40:31",
    explanation: `Este vers√≠culo faz parte de uma passagem onde Isa√≠as est√° consolando o povo de Israel durante um per√≠odo de grande dificuldade.

    A palavra hebraica para "esperar" (qavah) n√£o significa apenas aguardar passivamente, mas implica uma expectativa ativa e confiante. √â uma espera cheia de esperan√ßa e confian√ßa.

    A met√°fora das √°guias √© particularmente poderosa. As √°guias s√£o conhecidas por voar acima das tempestades, simbolizando a capacidade de se elevar acima das dificuldades da vida quando confiamos em Deus.

    A progress√£o de "voar", "correr" e "andar" representa diferentes n√≠veis de energia e esfor√ßo. A promessa √© que, com a for√ßa renovada por Deus, podemos enfrentar tanto os momentos extraordin√°rios (voar) quanto as rotinas di√°rias (andar) sem nos esgotar espiritualmente.`,
  },
]

export function Verse() {
  const [currentVerseIndex, setCurrentVerseIndex] = useState(0)
  const [isAnimating, setIsAnimating] = useState(false)
  const [favorites, setFavorites] = useState<number[]>([])
  const [isHeartAnimating, setIsHeartAnimating] = useState(false)

  const currentVerse = verses[currentVerseIndex]
  const isFavorited = favorites.includes(currentVerse.id)

  const nextVerse = () => {
    if (isAnimating) return
    setIsAnimating(true)
    setTimeout(() => {
      setCurrentVerseIndex((prev) => (prev + 1) % verses.length)
      setIsAnimating(false)
    }, 300)
  }

  const prevVerse = () => {
    if (isAnimating) return
    setIsAnimating(true)
    setTimeout(() => {
      setCurrentVerseIndex((prev) => (prev - 1 + verses.length) % verses.length)
      setIsAnimating(false)
    }, 300)
  }

  const toggleFavorite = () => {
    setIsHeartAnimating(true)
    setTimeout(() => setIsHeartAnimating(false), 600)

    if (isFavorited) {
      setFavorites((prev) => prev.filter((id) => id !== currentVerse.id))
      // Toast simulation
      console.log("Removido dos favoritos üíî")
    } else {
      setFavorites((prev) => [...prev, currentVerse.id])
      // Toast simulation
      console.log("Semente favoritada! üå±‚ù§Ô∏è")
    }
  }

  // Simula a mudan√ßa di√°ria do vers√≠culo
  useEffect(() => {
    const today = new Date()
    const dayOfYear = Math.floor((today.getTime() - new Date(today.getFullYear(), 0, 0).getTime()) / (1000 * 60 * 60 * 24))
    setCurrentVerseIndex(dayOfYear % verses.length)
  }, [])

  return (
    <div className="card verse-card">
      <div className="card-content">
        <div className="verse-navigation">
          <button className="btn btn-icon" onClick={prevVerse}>
            <ChevronLeft size={20} />
          </button>

          <div className={`verse-content ${isAnimating ? "animating" : ""}`}>
            <blockquote className="verse-quote">{currentVerse.text}</blockquote>

            <div className="verse-actions">
              <div className="verse-reference">{currentVerse.reference}</div>

              <button
                className={`btn btn-icon ${isFavorited ? "favorited" : ""} ${isHeartAnimating ? "heart-animating" : ""}`}
                onClick={toggleFavorite}
                style={{
                  background: isFavorited ? "rgba(239, 68, 68, 0.1)" : "transparent",
                  borderColor: isFavorited ? "rgba(239, 68, 68, 0.3)" : "var(--border-color)",
                }}
              >
                <Heart size={20} className={isFavorited ? "favorited" : ""} fill={isFavorited ? "#ef4444" : "none"} />
              </button>
            </div>
          </div>

          <button className="btn btn-icon" onClick={nextVerse}>
            <ChevronRight size={20} />
          </button>
        </div>

        {/* Nova se√ß√£o de explica√ß√£o do vers√≠culo */}
        <div className="verse-explanation">
          <div className="explanation-title">
            <BookOpen size={18} />
            <span>Explica√ß√£o</span>
          </div>
          <div className="explanation-content">
            {currentVerse.explanation.split("\n\n").map((paragraph, index) => (
              <p key={index}>{paragraph.trim()}</p>
            ))}
          </div>
        </div>
      </div>
    </div>
  )
}
